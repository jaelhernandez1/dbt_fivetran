{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2024-03-11T18:52:18.824620Z", "invocation_id": "0c4547ef-92e5-44c5-adb0-c3254e1df80c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-11T18:52:00.376081Z", "completed_at": "2024-03-11T18:52:00.382763Z"}, {"name": "execute", "started_at": "2024-03-11T18:52:00.383887Z", "completed_at": "2024-03-11T18:52:04.492069Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.118085145950317, "adapter_response": {"_message": "CREATE TABLE (1.0k rows, 7.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1000, "bytes_processed": 8073212, "bytes_billed": 10485760, "location": "US", "project_id": "dataengineering-np-r-17f2ad92", "job_id": "d4a14f14-de05-4e94-b1b4-772fa74e6d58", "slot_ms": 4529}, "message": "CREATE TABLE (1.0k rows, 7.7 MiB processed)", "failures": null, "unique_id": "model.dbt_fivetran.test_pipeline_user_dbt", "compiled": true, "compiled_code": "\n\n\nSELECT\n    id,\n    roles,\n    subscription,\n    created,\n    defaultLocale,\n    email,\n    CONCAT(firstName, ' ', lastName) AS user\nFROM\n    Test_pipeline.user\nLIMIT\n    1000", "relation_name": "`dataengineering-np-r-17f2ad92`.`dbt_fivetran`.`test_pipeline_user_dbt`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-11T18:52:04.496931Z", "completed_at": "2024-03-11T18:52:04.502104Z"}, {"name": "execute", "started_at": "2024-03-11T18:52:04.503030Z", "completed_at": "2024-03-11T18:52:18.819415Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 14.324717044830322, "adapter_response": {"_message": "CREATE TABLE (1.2m rows, 925.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1163592, "bytes_processed": 970109003, "bytes_billed": 970981376, "location": "US", "project_id": "dataengineering-np-r-17f2ad92", "job_id": "64b83a8f-0ef1-4837-9204-f7959632c8d4", "slot_ms": 282626}, "message": "CREATE TABLE (1.2m rows, 925.2 MiB processed)", "failures": null, "unique_id": "model.dbt_fivetran.vw_account", "compiled": true, "compiled_code": "\n\nselect \ndistinct\npcs.gap_label as new_pscstatus,\nnew_lastcontactdate,\nacc.gap_label as AccountCategoryCode,\naclc.gap_label as AccountClassificationCode,\nact.AccountId,\nact.AccountNumber,\narc.gap_label as AccountRatingCode,\nact.ad_1styearorrenew,\nact.ad_AccountBalance,\nact.ad_accountbalance_Base,\ncast(act.ad_AccountNumber as string) as ad_AccountNumber,\natc.gap_label as ad_AccountType__c,\nact.ad_activesubscriptioncount,\nact.ad_ageofoldestinvoice,\nact.ad_allcustomerlocations,\nact.ad_AutoPay,\nact.ad_autozonecustomer,\nact.ad_billingemail,\nbst.gap_label as ad_BusinessShopType__c,\nact.ad_chargeoff,\nact.ad_CreditBalance,\nach.gap_label as ad_credithold__C,\nact.ad_Currency,\nact.ad_exemptcertificateId,\nes.gap_label as ad_exemptstatus,\nact.ad_FleetAccountID__c,\nact.ad_hasactivesubscription,\nact.ad_invoiceowner,\nact.ad_lapsedcasecreatedts,\nact.ad_Lapseddatetimestamp,\nact.ad_LastInvoiceAmount,\nact.ad_LastPaymentAmount,\nact.ad_LastPaymentDate,\nact.ad_lastreviewdate,\nact.ad_latestsubscriptioncancelleddate,\nact.ad_latestsubscriptionenddate,\nlt.gap_label as ad_locationtype,\nact.ad_NationalAccountCode__c,\nact.ad_oldinvoicedate,\not.gap_label as ad_OwnershipType__c,\npl.gap_label as ad_primarylanguage,\nCAST(IF(act.ad_removecreditholduntil = '',NULL,act.ad_removecreditholduntil) AS DATETIME)ad_removecreditholduntil,\nact.ad_SalesRepName,\ns.gap_label as ad_status,\nact.ad_taxexempt,\nvc.gap_label as ad_verticalchannel,\nact.ad_zAccountId,\nact.Address1_City,\nact.Address1_Country,\nact.Address1_County,\nact.Address1_Fax,\nact.Address1_Line1,\nact.Address1_Line2,\nact.Address1_Name,\nact.Address1_PostalCode,\nact.Address1_PrimaryContactName,\nact.Address1_StateOrProvince,\nbtc.gap_label as BusinessTypeCode,\nact.CreatedOn,\nctc.gap_label as CustomerTypeCode,\nact._DefaultPriceLevelId_value as DefaultPriceLevelId,\npr.name as defaultpricelevelidname,\nact.DoNotEMail,\nact.DoNotPhone,\nact.DoNotPostalMail,\nact.DoNotSendMM,\nact.MarketingOnly,\nact._masterid_value as MasterId,\nact.Merged,\nact._modifiedby_value as modifiedby,\nsys.fullname as modifiedbyname,\nact.ModifiedOn,\nact.Name,\nact._new_accountmanager_value as new_accountmanager,\nsys1.fullname as new_accountmanagername,\nar.gap_label as new_AccountRating,\nacts.gap_label as new_AccountStatus,\nnat.gap_label as new_accounttype,\nact.new_annualsubscription,\nact.new_AZPricePlan,\nact.new_bad,\nnc.gap_label as new_Channel,\nact.new_childaccountcount,\nact.new_childaccountcount_Date,\nact._new_collector_value as new_collector,\nsys2.fullname as new_collectorname,\nnct.gap_label as new_Country,\nact.new_CSIFlag,\nact.new_customerno,\nact.new_custrej,\nact.new_custrejamt,\nact.new_custrejdate,\nact.new_ExpirationDate,\nact.new_finalinvoiceamount,\nact.new_finalinvoicedate,\nact.new_firstname,\nact.new_Gen3AccessPoints,\nact.new_Gen3AcmSiteId,\nact.new_Gen3TrialDays,\nact.new_Gen3TrialDaysToGo,\nact.new_Gen3TrialSessions,\nact.new_Gen3TrialStartDate,\nact.new_industry3,\nact.new_jobtitle,\nact.new_LastInvoice,\nact.new_LastInvoiceAmount,\nact.new_lastname,\nact.new_lastpaymentamount,\nact.new_lastpaymentdate,\nact.new_LastPhoneCallDate,\nact.new_lastsavedate,\nact.new_LastTaskDate,\nnlc.gap_label as new_leadchannel,\nnma.gap_label as new_MasterAccountType,\nact.new_monthlysubscription,\nact.new_MonthsTenure,\nact.new_naicsName,\nact._new_NationalAccount_value as new_NationalAccount,\nna.new_name as new_nationalaccountname,\nact.new_nationalaccounts,\nact._new_NationalAccount_value as new_NationalAcct,\nact.new_nextinvoiceamount,\nact.new_nextinvoicedate,\nact.new_PeopleSoftID,\nact.new_promocode,\nact._new_pscgroupid_value as new_pscGroupId,\npscg.new_GroupName as new_pscGroupIdName,\nnrb.gap_label as new_reasonbad,\nact._new_Segment2_value as new_Segment2,\nseg.new_name as new_segment2name,\nact.new_SpecialAccount,\nact._new_Subsegment2_value as new_Subsegment2,\nsseg.new_name as new_subsegment2name,\nact.new_territory,\nact._OwnerId_value as OwnerId,\nact._ParentAccountId_value as ParentAccountId,\nps.ContactId as PrimaryContactId,\nps.FullName as PrimaryContactIdName,\nact.Revenue,\nact.SIC,\nsc.gap_label as statuscode,\nact.Telephone1,\ntc.gap_label as TerritoryCode,\nact._TerritoryId_value as TerritoryId,\nact._TransactionCurrencyId_value as TransactionCurrencyId,\nact.ad_oldestinvoicebalance,\nzc.gap_label as ad_zuora_chargeoff,\nact.ad_originalsalesdate,\nact.new_autozonepin,\nact.ad_creditholddate\nfrom  msd_landing_bq.account  act\nleft join  msd_landing_bq.gap_optionsetrefs  acc \non  act.AccountCategoryCode=acc.gap_value\nand acc.gap_optionsetschemaname='AccountCategoryCode' and acc.gap_entityschemaname='Account'\n\n\nleft join  msd_landing_bq.gap_optionsetrefs  aclc on \ncast((case when act.AccountClassificationCode='' then '-999' else act.AccountClassificationCode end)  as integer)=aclc.gap_value\nand aclc.gap_optionsetschemaname='AccountClassificationCode' and aclc.gap_entityschemaname='Account'\n\n\nleft join  msd_landing_bq.gap_optionsetrefs  arc on \ncast((case when act.AccountRatingCode='' then '-999' else act.AccountRatingCode end) as integer)=arc.gap_value\nand arc.gap_optionsetschemaname='AccountRatingCode' and arc.gap_entityschemaname='Account' \n\n\nleft join  msd_landing_bq.gap_optionsetrefs  atc on \ncast((case when (act.ad_AccountType__c is null or act.ad_AccountType__c='')then '-999' else act.ad_AccountType__c end) as integer) =atc.gap_value\nand atc.gap_optionsetschemaname='ad_AccountType__c' \nand atc.gap_entityschemaname='Account' \n\n\nleft join  msd_landing_bq.gap_optionsetrefs  bst on\n cast((case when act.ad_BusinessShopType__c='' then '-999' else act.ad_BusinessShopType__c end) as integer)=bst.gap_value\nand bst.gap_optionsetschemaname='ad_BusinessShopType__c' and bst.gap_entityschemaname='Account' \n\n\nleft join  msd_landing_bq.gap_optionsetrefs  ach on \ncast((case when act.ad_CreditHold__c='' then '-999' else act.ad_CreditHold__c end) as integer) =ach.gap_value\nand ach.gap_optionsetschemaname='ad_CreditHold__c' and ach.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  es on \ncast((case when act.ad_exemptstatus='' then '-999' else act.ad_exemptstatus end) as integer)=es.gap_value\nand es.gap_optionsetschemaname='ad_exemptstatus' and es.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  ot on \ncast((case when act.ad_OwnershipType__c='' then '-999' else act.ad_OwnershipType__c end) as integer)=ot.gap_value\nand ot.gap_optionsetschemaname='ad_OwnershipType__c' and ot.gap_entityschemaname='Account' \n\n\nleft join  msd_landing_bq.gap_optionsetrefs  pl on \ncast((case when act.ad_primarylanguage='' then '-999' else act.ad_primarylanguage end) as integer) =pl.gap_value\nand pl.gap_optionsetschemaname='ad_primarylanguage' and pl.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  s on \ncast((case when act.ad_Status='' then '-999' else act.ad_Status end) as integer) =s.gap_value\nand s.gap_optionsetschemaname='ad_Status' and s.gap_entityschemaname='Account' \n\n\nleft join  msd_landing_bq.gap_optionsetrefs  vc on \n--act.ad_verticalchannel=vc.gap_value\n cast((case when act.ad_verticalchannel='' then '-999' else act.ad_verticalchannel end) as integer)=vc.gap_value\nand vc.gap_optionsetschemaname='ad_verticalchannel' and vc.gap_entityschemaname='Account' \n\n\nleft join  msd_landing_bq.gap_optionsetrefs  btc on act.BusinessTypeCode=btc.gap_value\nand btc.gap_optionsetschemaname='BusinessTypeCode' and btc.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  ctc on \ncast((case when act.CustomerTypeCode='' then '-999' else act.CustomerTypeCode end) as integer)=ctc.gap_value\nand ctc.gap_optionsetschemaname='CustomerTypeCode' and ctc.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  ar on \n-- act.new_AccountRating =ar.gap_value\ncast((case when act.new_AccountRating='' then '-999' else act.new_AccountRating end)  as integer)=ar.gap_value\nand ar.gap_optionsetschemaname='new_AccountRating' and ar.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  acts on \n-- act.new_AccountStatus=acts.gap_value\ncast((case when act.new_AccountStatus='' then '-999' else act.new_AccountStatus end) as integer)=acts.gap_value\nand acts.gap_optionsetschemaname='new_AccountStatus' and acts.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  nat on act.new_accounttype=nat.gap_value\nand nat.gap_optionsetschemaname='new_accounttype' and nat.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  nc on act.new_Channel=nc.gap_value\nand nc.gap_optionsetschemaname='new_Channel' and nc.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  nct on act.new_Country=nct.gap_value\nand nct.gap_optionsetschemaname='new_Country' and nct.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  nlc on \n-- act.new_leadchannel=nlc.gap_value\ncast((case when act.new_leadchannel='' then '-999' else act.new_leadchannel end) as integer)=nlc.gap_value\nand nlc.gap_optionsetschemaname='new_leadchannel' and nlc.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  nma on \n-- act.new_MasterAccountType =nma.gap_value\ncast((case when act.new_MasterAccountType='' then '-999' else act.new_MasterAccountType end) as integer)=nma.gap_value\nand nma.gap_optionsetschemaname='new_MasterAccountType' and nma.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  nrb on \n-- act.new_reasonbad=nrb.gap_value\ncast((case when act.new_reasonbad='' then '-999' else act.new_reasonbad end)  as integer)=nrb.gap_value\nand nrb.gap_optionsetschemaname='new_reasonbad' and nrb.gap_entityschemaname='Account' \n\nleft join  msd_landing_bq.gap_optionsetrefs  tc on act.TerritoryCode=tc.gap_value\nand tc.gap_optionsetschemaname='TerritoryCode' and tc.gap_entityschemaname='Account' \nleft join  msd_landing_bq.gap_optionsetrefs  zc \non cast((case when act.ad_zuora_chargeoff='' then '-999' else act.ad_zuora_chargeoff end)as integer)=zc.gap_value\nand zc.gap_optionsetschemaname='ad_zuora_chargeoff' and zc.gap_entityschemaname='Account' \nleft join  msd_landing_bq.gap_optionsetrefs  sc on act.StatusCode=sc.gap_value\nand sc.gap_optionsetschemaname='StatusCode' and sc.gap_entityschemaname='Account'\nleft join  msd_landing_bq.contact  ps on act._PrimaryContactId_value=ps.ContactId\nleft join  msd_landing_bq.gap_optionsetrefs  lt on \ncast((case when act.ad_locationtype='' then '-999' else act.ad_locationtype end) as integer)=lt.gap_value\nand lt.gap_optionsetschemaname='ad_locationtype' and lt.gap_entityschemaname='Account'\nleft join  msd_landing_bq.gap_optionsetrefs  naics on \ncast((case when act.new_NAICS='' then '-999' else act.new_NAICS end) as integer)=naics.gap_value\nand naics.gap_optionsetschemaname='new_NAICS' and naics.gap_entityschemaname='Account'\nleft join  msd_landing_bq.gap_optionsetrefs  pcs on act.new_pscstatus=pcs.gap_value\nand pcs.gap_optionsetschemaname='new_pscstatus' and pcs.gap_entityschemaname='Account'\nleft join  msd_landing_bq.systemusers  sys\non act._ModifiedBy_value=sys.SystemUserId\n\nleft join  msd_landing_bq.pricelevel  pr\non act._defaultpricelevelid_value=pr.PriceLevelId\n\nleft join  msd_landing_bq.systemusers  sys1\non act._new_accountmanager_value=sys1.SystemUserId\n\nleft join  msd_landing_bq.systemusers  sys2\non act._new_collector_value=sys2.SystemUserId\n\nleft join  msd_landing_bq.new_nationalaccounts  na\non act._new_NationalAccount_value=na.new_nationalaccountId\n\nleft join  msd_landing_bq.vw_new_segments seg\non act._new_Segment2_value=seg.new_segmentId\n\nleft join  msd_landing_bq.vw_new_subsegments sseg\non act._new_Subsegment2_value=sseg.new_subsegmentId\n\nleft join  msd_landing_bq.new_pscgroups  pscg\non act._new_pscgroupid_value =  pscg.new_PSCGroupId", "relation_name": "`dataengineering-np-r-17f2ad92`.`dbt_fivetran`.`vw_account`"}], "elapsed_time": 20.499353885650635, "args": {"version_check": true, "enable_legacy_logger": false, "exclude": [], "which": "run", "profiles_dir": "/Users/jael.hernandez/.dbt", "warn_error_options": {"include": [], "exclude": []}, "vars": {}, "log_level": "info", "print": true, "quiet": false, "show_resource_report": false, "indirect_selection": "eager", "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "defer": false, "populate_cache": true, "partial_parse": true, "log_format_file": "debug", "static_parser": true, "log_level_file": "debug", "partial_parse_file_diff": true, "cache_selected_only": false, "write_json": true, "log_format": "default", "introspect": true, "project_dir": "/Users/jael.hernandez/Documents/GIT/dbt_fivetran", "strict_mode": false, "printer_width": 80, "macro_debugging": false, "log_path": "/Users/jael.hernandez/Documents/GIT/dbt_fivetran/logs", "select": [], "use_colors_file": true, "use_colors": true, "invocation_command": "dbt run", "favor_state": false}}